// <auto-generated />
using System;
using ArmwrestlingApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArmwrestlingApp.Data.Migrations
{
    [DbContext(typeof(ArmwrestlingAppDbContext))]
    [Migration("20250605062546_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ArmwrestlingApp.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ArmwrestlingApp.Models.Competition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Unique Id of the competition");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2")
                        .HasComment("Date on which the competition was created");

                    b.Property<Guid>("Creator_id")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("Competition created by");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Brief information about the competition");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasComment("Date on which the competition ends");

                    b.Property<bool>("Finished")
                        .HasColumnType("bit")
                        .HasComment("Competion is finished");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Url of the game image");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("Competition is deleted");

                    b.Property<DateTime?>("LastChangeDate")
                        .HasColumnType("datetime2")
                        .HasComment("The last date on which the competionns was changed");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Competition location name");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Competition Name");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasComment("Date on which the competition starts");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasComment("Competition Type");

                    b.HasKey("Id");

                    b.ToTable("Competitions");
                });

            modelBuilder.Entity("ArmwrestlingApp.Models.CompetitionCategorie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompetitionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CompetitionId");

                    b.ToTable("CompetitionsCategories");
                });

            modelBuilder.Entity("ArmwrestlingApp.Models.CompetitionCategorie", b =>
                {
                    b.HasOne("ArmwrestlingApp.Models.Category", "Category")
                        .WithMany("CompetitionsCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmwrestlingApp.Models.Competition", "Competition")
                        .WithMany("CompetitionsCategories")
                        .HasForeignKey("CompetitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Competition");
                });

            modelBuilder.Entity("ArmwrestlingApp.Models.Category", b =>
                {
                    b.Navigation("CompetitionsCategories");
                });

            modelBuilder.Entity("ArmwrestlingApp.Models.Competition", b =>
                {
                    b.Navigation("CompetitionsCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
